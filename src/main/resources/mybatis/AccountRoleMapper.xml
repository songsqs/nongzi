<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shennong.nongzi.server.dal.dao.AccountRoleMapper" >
  <resultMap id="BaseResultMap" type="com.shennong.nongzi.server.bean.entity.AccountRole" >
    <id column="account_role_id" property="accountRoleId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="enable" property="enable" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    account_role_id, account_id, role_name, create_time, update_time, enable
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account_role
    where account_role_id = #{accountRoleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account_role
    where account_role_id = #{accountRoleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shennong.nongzi.server.bean.entity.AccountRole" useGeneratedKeys="true" keyProperty="accountRoleId" >
    insert into account_role (account_id, role_name, create_time, 
      update_time, enable)
    values (#{accountId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{enable,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.shennong.nongzi.server.bean.entity.AccountRole" useGeneratedKeys="true" keyProperty="accountRoleId" >
    insert into account_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="enable != null" >
        enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shennong.nongzi.server.bean.entity.AccountRole" >
    update account_role
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=BIT},
      </if>
    </set>
    where account_role_id = #{accountRoleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shennong.nongzi.server.bean.entity.AccountRole" >
    update account_role
    set account_id = #{accountId,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=BIT}
    where account_role_id = #{accountRoleId,jdbcType=INTEGER}
  </update>
  <select id="selectAccountListByAccountId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from 
  		account_role
  	where 
  		account_id = #{accountId}
  	and 
  		enable = 1
  </select>
</mapper>